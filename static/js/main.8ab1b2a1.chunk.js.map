{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/SinglePerson/SinglePerson.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/PageNotFound.tsx","pages/HomePage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","slug","sex","name","to","classNames","SinglePerson","born","died","motherName","fatherName","mother","father","location","useLocation","getParentLinkOrDash","parentName","parentType","pathname","PeopleTable","people","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","loadData","peopleFromServer","updatedPeople","find","mom","dad","useEffect","isPeopleArrayEmpty","length","PageNotFound","HomePage","PageNavLink","text","isActive","NavBar","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"qPASO,SAASA,IACd,OALYC,EAKA,IAJL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAKvBI,MAAK,kBAAMC,MARZ,oEAQM,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IAPlB,IAAcP,CAQb,C,iBCXYQ,EAAS,kBACpB,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,E,gBCOTC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KAEnB,OACE,cAAC,IAAD,CACEC,GAAIH,EACJH,UACEO,IACE,CACE,kBAA2B,MAARH,IAL3B,SAUGC,GAGN,EChBYG,EAAgC,SAAC,GAAgB,IAAdN,EAAa,EAAbA,OAE5CE,EAQEF,EARFE,IACAK,EAOEP,EAPFO,KACAC,EAMER,EANFQ,KACAC,EAKET,EALFS,WACAC,EAIEV,EAJFU,WACAC,EAGEX,EAHFW,OACAC,EAEEZ,EAFFY,OACAX,EACED,EADFC,KAGIY,EAAWC,cAEXC,EAAsB,SAC1BC,EACAC,GAF0B,OAI1BA,EACE,cAAC,EAAD,CACEjB,OAAQiB,IAGVD,GAAc,GATU,EAa5B,OACE,qBACE,UAAQ,SACRlB,UACEO,IAAW,CAAE,yBAA0B,kBAAWJ,KAAWY,EAASK,WAH1E,UAME,6BACE,cAAC,EAAD,CAAYlB,OAAQA,MAGtB,6BAAKE,IACL,6BAAKK,IACL,6BAAKC,IAEL,6BAAKO,EAAoBN,EAAYE,KACrC,6BAAKI,EAAoBL,EAAYE,OAG1C,EChDYO,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBACE,UAAQ,cACRtB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGsB,EAAOC,KAAI,SAAArB,GAAM,OAChB,cAAC,EAAD,CAEEA,OAAQA,GADHA,EAAOC,KAFE,QASzB,EC7BYqB,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOH,EAAP,KAAeI,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAQ,iDAAG,uGACfH,GAAa,GACbE,EAAS,IAFM,kBAIkBxC,IAJlB,OAIP0C,EAJO,OAKPC,EAAgBD,EAAiBT,KAAI,SAACrB,GAC1C,IAAMW,EAASmB,EACZE,MAAK,SAAAC,GAAG,OAAIA,EAAI9B,OAASH,EAAOS,UAAxB,IACLG,EAASkB,EACZE,MAAK,SAAAE,GAAG,OAAIA,EAAI/B,OAASH,EAAOU,UAAxB,IAEX,OAAO,YAAC,eAEDV,GAFP,IAGIW,SACAC,UAGL,IAEDY,EAAUO,GApBG,kDAsBbH,EAAS,wBAtBI,yBAwBbF,GAAa,GAxBA,6EAAH,qDA4BdS,qBAAU,WACRN,GACD,GAAE,IAEH,IAAMO,GAAsBX,IAAcL,EAAOiB,OAEjD,OACE,qCACE,oBAAIvC,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACG2B,GACC,cAAC,EAAD,MAGCE,EAAMU,QACP,mBAAG,UAAQ,qBAAqBvC,UAAU,kBAA1C,SACG6B,MAIFP,EAAOiB,QACR,cAAC,EAAD,CAAajB,OAAQA,IAGtBgB,GACC,mBAAG,UAAQ,kBAAX,sDAQX,ECvEYE,EAAyB,kBACpC,oBAAIxC,UAAU,QAAd,2BADoC,ECAzByC,EAAqB,kBAChC,oBAAIzC,UAAU,QAAd,sBADgC,ECOrB0C,EAA+B,SAAC,GAAkB,IAAhBpC,EAAe,EAAfA,GAAIqC,EAAW,EAAXA,KACjD,OACE,cAAC,IAAD,CACErC,GAAIA,EACJN,UACE,gBACI4C,EADJ,EACIA,SADJ,OAEKrC,IAAW,cACd,CAAE,8BAA+BqC,GAHnC,EAHJ,SASGD,GAGN,ECpBYE,EAAmB,kBAC9B,qBACE,UAAQ,MACR7C,UAAU,iCACV8C,KAAK,aACL,aAAW,kBAJb,SAME,qBAAK9C,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaM,GAAG,IAAIqC,KAAK,SACzB,cAAC,EAAD,CAAarC,GAAG,UAAUqC,KAAK,iBAVP,ECInBI,EAAgB,WAC3B,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAM/C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU3C,GAAG,IAAI4C,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,QAE/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAMpC,EClBDE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.8ab1b2a1.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={slug}\n      className={\n        classNames(\n          {\n            'has-text-danger': sex === 'f',\n          },\n        )\n      }\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const SinglePerson: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  const location = useLocation();\n\n  const getParentLinkOrDash = (\n    parentName: string | null,\n    parentType?: Person,\n  ) => (\n    parentType ? (\n      <PersonLink\n        person={parentType}\n      />\n    ) : (\n      parentName || '-'\n    )\n  );\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={\n        classNames({ 'has-background-warning': `/people/${slug}` === location.pathname })\n      }\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>{getParentLinkOrDash(motherName, mother)}</td>\n      <td>{getParentLinkOrDash(fatherName, father)}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types/Person';\nimport { SinglePerson } from '../SinglePerson/SinglePerson';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <SinglePerson\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const loadData = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const peopleFromServer = await getPeople();\n      const updatedPeople = peopleFromServer.map((person) => {\n        const mother = peopleFromServer\n          .find(mom => mom.name === person.motherName);\n        const father = peopleFromServer\n          .find(dad => dad.name === person.fatherName);\n\n        return (\n          {\n            ...person,\n            mother,\n            father,\n          }\n        );\n      });\n\n      setPeople(updatedPeople);\n    } catch {\n      setError('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const isPeopleArrayEmpty = !isLoading && !people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {!!error.length && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {error}\n            </p>\n          )}\n\n          {!!people.length && (\n            <PeopleTable people={people} />\n          )}\n\n          {isPeopleArrayEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={\n        (\n          { isActive },\n        ) => classNames('navbar-item',\n          { 'has-background-grey-lighter': isActive })\n      }\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { HomePage } from './pages/HomePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}